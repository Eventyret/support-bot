version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: support-bot-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=support-bot
    networks:
      - support-bot-network
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest
    container_name: support-bot-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=n8n
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_LISTEN_ADDRESS=0.0.0.0
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-n8n-encryption-key}
      - DB_TYPE=mongodb
      - DB_MONGODB_CONNECTION_URL=mongodb://mongodb:27017/n8n
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - mongodb
    networks:
      - support-bot-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: support-bot-backend
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=mongodb://mongodb:27017/support-bot
      - PORT=3000
      - N8N_WEBHOOK_URL=http://n8n:5678/webhook/support-bot-ai
      - N8N_WEBHOOK_URL_DEV=http://n8n:5678/webhook/support-bot-ai-dev
      - CHAT_CLEANUP_AGE=30d
      - CLEANUP_API_KEY=${CLEANUP_API_KEY:-default-api-key}
      - NODE_ENV=production
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - n8n
    networks:
      - support-bot-network
    restart: unless-stopped

volumes:
  mongodb_data:
    name: support-bot-mongodb-data
  n8n_data:
    name: support-bot-n8n-data

networks:
  support-bot-network:
    name: support-bot-network
