name: ðŸš€ Main Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment of all components'
        type: boolean
        default: false

permissions:
  contents: read
  id-token: write

jobs:
  # Use the reusable CI workflow for basic checks
  ci:
    name: Run CI Checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
    
    - name: Update npm
      run: npm install -g npm@11.3.0
    
    - name: Install Dependencies
      run: npm install
    
    - name: Run Linting
      run: npm run lint
    
    - name: Run Tests
      run: npm run test:backend

  # Deploy infrastructure first
  infrastructure:
    name: Deploy Infrastructure
    needs: ci
    uses: ./.github/workflows/terraform-apply.yml
    secrets: inherit
    with:
      environment: ${{ github.event.inputs.environment || 'prod' }}
  
  # Deploy backend
  deploy-backend:
    name: Deploy Backend
    needs: infrastructure
    uses: ./.github/workflows/backend-deploy.yml
    secrets: inherit
  
  # Deploy frontend
  deploy-frontend:
    name: Deploy Frontend
    needs: deploy-backend
    uses: ./.github/workflows/frontend-deploy.yml
    secrets: inherit
    with:
      backend_url: "https://cognito-backend.fairytales.dev"
  
  # Deployment summary
  deployment-summary:
    name: Deployment Summary
    needs: [infrastructure, deploy-backend, deploy-frontend]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      
      - name: Get Backend URL from Parameter Store
        id: parameter_store
        run: |
          echo "Getting ALB DNS name from Parameter Store..."
          ALBDNS=$(aws ssm get-parameter --name "/support-bot/prod/alb-dns-name" --query "Parameter.Value" --output text 2>/dev/null || echo "")
          
          if [ -z "$ALBDNS" ]; then
            echo "Parameter Store value is empty! Using default ALB DNS..."
            ALBDNS="support-bot-prod-alb-451792304.eu-west-2.elb.amazonaws.com"
          fi
          
          FRONTEND_URL=$(aws ssm get-parameter --name "/support-bot/prod/frontend-url" --query "Parameter.Value" --output text 2>/dev/null || echo "")
          
          echo "::notice title=Deployment Summary::Backend API deployed to: https://cognito-backend.fairytales.dev"
          if [ -n "$FRONTEND_URL" ]; then
            echo "::notice title=Deployment Summary::Frontend UI deployed to: $FRONTEND_URL"
          fi
          
          echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status | URL |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend API | âœ… Deployed | https://cognito-backend.fairytales.dev |" >> $GITHUB_STEP_SUMMARY
          
          if [ -n "$FRONTEND_URL" ]; then
            echo "| Frontend UI | âœ… Deployed | $FRONTEND_URL |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Frontend UI | âœ… Deployed | http://$ALBDNS |" >> $GITHUB_STEP_SUMMARY
          fi 